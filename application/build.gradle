plugins {
    id 'module-config'
    id 'spring-conventions'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

dependencies {
    implementation project(":common")
    implementation project(':gameManagementContext')
    implementation project(':playerManagementContext')
    implementation project(':gameStatisticsContext')
    implementation project(':lobbyManagementContext')
    implementation project(':storeContext')

    runtimeOnly 'com.mysql:mysql-connector-j'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'javax.servlet:javax.servlet-api:4.0.1'


    // Use Spring Boot dependencies to ensure alignment
    implementation platform('org.springframework.boot:spring-boot-dependencies:3.1.1')

    testImplementation 'org.springframework.amqp:spring-rabbit-test'

    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'


    // Keycloak dependencies
    compileOnly('org.keycloak:keycloak-core:25.0.5') {
        exclude group: 'org.wildfly', module: 'wildfly-common'
    }
    compileOnly 'org.keycloak:keycloak-server-spi:25.0.5'
    // Optional: Add if specific classes from `keycloak-services` are needed
    compileOnly 'org.keycloak:keycloak-services:25.0.5'

    // Include additional libraries if necessary
    implementation 'org.wildfly.client:wildfly-client-config:1.0.1.Final'

    runtimeOnly("org.jboss.resteasy:resteasy-client-api:6.2.4.Final") { transitive = false }
    runtimeOnly("org.jboss.resteasy:resteasy-client:6.2.4.Final") { transitive = false }

    // JSON support (optional, if used in listener logic)
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
}


shadowJar {
    archiveBaseName.set('keycloak-event-listener')
    archiveVersion.set('1.0.0')
    archiveClassifier.set('')
    // Shade Hibernate classes to avoid conflicts
    relocate 'org.hibernate', 'com.example.shaded.hibernate'

    exclude 'org/keycloak/**'

// Exclude RESTEasy and Wildfly if they are already provided by Keycloak
    exclude 'org/jboss/resteasy/**'
    exclude 'org/wildfly/**'

    mergeServiceFiles() // Ensures service files are merged correctly
}

tasks.build {
    dependsOn shadowJar
}

/*

tasks.jar {
    archiveBaseName.set('keycloak-event-listener')
    archiveVersion.set('1.0.0')
    archiveClassifier.set('')

    manifest {
        attributes(
                'Implementation-Title': 'Keycloak Event Listener',
                'Implementation-Version': archiveVersion.get()
        )
    }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    from {
        configurations.runtimeClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        }.findAll {
            it instanceof File && !it.name.startsWith("keycloak") && !it.name.contains("resteasy")
        }
    }

    // Explicitly add Spring AMQP JARs if they are not being picked up correctly
    from(configurations.runtimeClasspath.filter {
        it.name.contains('spring-rabbit') ||
                it.name.contains('spring-amqp') ||
                it.name.contains('spring-beans') ||
                it.name.contains('spring-context') })


    // Explicitly include RabbitTemplate class if it is still missing
    from({
        configurations.runtimeClasspath.filter { it.name == 'spring-rabbit-3.1.1.jar' }.collect {
            zipTree(it).matching {
                include 'org/springframework/amqp/rabbit/core/RabbitTemplate.class'
            }
        }
    })
}
*/
